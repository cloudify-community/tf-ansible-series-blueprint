tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint was automatically created from a Terraform template.

imports:
  - http://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-terraform-plugin
  - plugin:cloudify-ansible-plugin

inputs:
  instance_type:
    type: string
    default: ""
  instance_name:
    type: string
    default: ""
  region:
    type: string
    default: ""
  ssh_keypair:
    type: string
    default: ""

node_templates:
  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip

  cloud_resources:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: "https://github.com/cloudify-community/tf-ansible-series-module/archive/refs/heads/main.zip"
        source_path: ""
        variables:
          instance_type: { get_input: instance_type }
          instance_name: { get_input: instance_name }
          region: { get_input: region }
          ssh_keypair: { get_input: ssh_keypair }
          aws_access_key: { get_secret: aws_access_key_id }
          aws_secret_key: { get_secret: aws_secret_access_key }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host

  nginx:
    type: cloudify.nodes.Root
    relationships:
      - type: cloudify.relationships.contained_in
        target: cloud_resources
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            playbook_path: playbooks/deploy_nginx.yaml
            sources:
              instances:
                hosts:
                  instance:
                    ansible_host: { get_attribute: [ cloud_resources, outputs, instance_ip, value ] }
                    ansible_user: ubuntu
                    ansible_ssh_private_key_file: { get_secret: ansible_private_key }
                    ansible_become: true
                    ansible_ssh_common_args: -o StrictHostKeyChecking=no

capabilities:
  instance_id:
    value: { get_attributes_list: [ cloud_resources, outputs, instance_id, value ] }
  instance_ip:
    value: { get_attributes_list: [ cloud_resources, outputs, instance_ip, value ] }

